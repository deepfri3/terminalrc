
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
HISTCONTROL=$HISTCONTROL${HISTCONTROL+:}ignoredups
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set vi editing mode for bash
set -o vi

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
  else
    color_prompt=
  fi
fi

if [ "$color_prompt" = yes ]; then
  #set color
  #export TERM="xterm-256color"

  # set a fancy prompt (non-color, unless we know we "want" color)
  case "$TERM" in
      xterm-color) color_prompt=yes;;
  esac

  # Enable colors for ls, etc.  Prefer user defined file
  # run: $ dircolors -p > ~/.dircolorsrc
  if type -P dircolors >/dev/null ; then
    if [[ -f ~/.dircolorsrc ]] ; then
      eval $(dircolors -b ~/.dircolorsrc)
    elif [[ -f /etc/DIR_COLORS ]] ; then
      eval $(dircolors -b /etc/DIR_COLORS)
    fi
  fi

  # You may uncomment the following lines if you want `ls' to be colorized:
  export GREP_OPTIONS='--color=auto'
  alias grep="grep $GREP_OPTIONS"
  alias fgrep="fgrep $GREP_OPTIONS"
  alias egrep="egrep $GREP_OPTIONS"

  # You may uncomment the following lines if you want `ls' to be colorized:
  export LS_OPTIONS='--color=auto'
  alias ls="ls $LS_OPTIONS"
  alias ll="ls $LS_OPTIONS -l"

  PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
  PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi

# dont pollute the rest of the bashrc
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

export PATH=$PATH:/usr/local/sbin:/usr/sbin:/sbin

# CC CLI Info
export CCASE_USERNAME=
export CCASE_SERVER=https://usfhp00001esrv.ww009.siemens.net/ccrc
export CCASE_PASSWORD=
export PS1='$PROJECT=>${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '

# rcleartool command aliases
alias ct="rcleartool"
VISUAL=vim
export VISUAL
EDITOR=vim
export EDITOR

# import path for XLS CodeSourcery libraries and includes
export PATH=/opt/arm-2010.09/bin:$PATH
#export CFLAGS=-I/opt/XLS/usr/include
#export LDFLAGS=-L/opt/XLS/usr/lib

# add cntlm proxy
export http_proxy="127.0.0.1:3128"
export https_proxy=$http_proxy
export ftp_proxy=$https_proxy

# Add user $HOME/bin to PATH
export PATH=$HOME/bin:$PATH
